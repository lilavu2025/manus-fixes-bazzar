// scripts/dev-default.ts
// ูุชุดุบูู dev ูุน ุงูุชูููู ุงูุงูุชุฑุงุถู
// npm run dev

import { execSync } from "child_process";
import { copyFileSync, existsSync } from "fs";
import { join } from "path";

const envSourcePath = join(process.cwd(), "envs", "default.env");
const envTargetPath = join(process.cwd(), ".env");

// ุงูุชุญูู ูู ูุฌูุฏ ููู ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถู
if (!existsSync(envSourcePath)) {
  console.error(`โ ููู ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถู ุบูุฑ ููุฌูุฏ: envs/default.env`);
  process.exit(1);
}

// ูุณุฎ ููู ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถู ุฅูู .env
try {
  copyFileSync(envSourcePath, envTargetPath);
  console.log(`โ ุชู ูุณุฎ ููู ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถู: envs/default.env โ .env`);
} catch (error) {
  console.error(`โ ูุดู ูู ูุณุฎ ููู ุงูุจูุฆุฉ:`, error);
  process.exit(1);
}

console.log(`๐ ุฌุงุฑู ุชุดุบูู dev ูุน ุงูุชูููู ุงูุงูุชุฑุงุถู`);

try {
  execSync(`vite`, { stdio: "inherit" });
} catch (error) {
  console.error("โ ูุดู ูู ุชุดุบูู dev:", error);
  process.exit(1);
}
